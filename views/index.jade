extends layout

block content
  h1#twitter-feed
    a.headeranchor-link(name='user-content-twitter-feed', href='#twitter-feed', aria-hidden='true')
      span.headeranchor
  div(id="chart-1", style="height: 300px;")
  script(src="http://www.google.com/jsapi")
  script(src="/vendor/chartkick.js")
  script.
    $(document).ready(function () {
      function primeNumbers(n, callback) {
        var primes = []; j = 2; vals = 0;
        while(primes.length < n) {
          var add = true;
          for (var i = 0; i < primes.length; i++) {
            vals += 1;
            if (j % primes[i] === 0) {
              add = false;
              break;
            }
          }
          if (add) {
            primes.push(j);
          }
          j += 1;
        }
        callback(primes, vals);
      }
      resultSet = {};
      var max = 100;
      function run(x) {
        if (x < max) {
          primeNumbers(x, function (primes, vals) {
            resultSet[x] = vals;
            run(x+1);
          });
        } else {
          console.log(resultSet);
          var data = {"name":"Prime Execution Time", "data":[0.75, 0.5, 0.3125, 0.2727272727272727, 0.21875, 0.2, 0.17307692307692307, 0.14492753623188406, 0.1375, 0.12121212121212122, 0.11304347826086956, 0.10852713178294573, 0.10204081632653061, 0.0935672514619883, 0.08717948717948718, 0.08450704225352113, 0.0794979079497908, 0.07633587786259542, 0.07420494699646643, 0.07028753993610223, 0.06784660766961652, 0.06486486486486487, 0.06142506142506143, 0.05963302752293578, 0.058315334773218146, 0.05668016194331984, 0.055449330783938815, 0.0539568345323741, 0.05065359477124183, 0.04945904173106646, 0.04796511627906977, 0.04709141274238227, 0.045278137128072445, 0.04449938195302843, 0.04337631887456037, 0.042269187986651836, 0.04144527098831031, 0.04036326942482341, 0.03946102021174206, 0.03885291396854764, 0.037719298245614034, 0.037162162162162164, 0.036525974025974024, 0.03599374021909233, 0.034918276374442794, 0.03389830508474576, 0.03337874659400545, 0.03293807641633729, 0.03244274809160305, 0.03188228080931944, 0.03147268408551069, 0.03076923076923077, 0.030236393622869707, 0.02973977695167286, 0.029275808936825885, 0.02892768079800499, 0.028488652824722356, 0.028116213683223992, 0.027790432801822324, 0.027240773286467488, 0.0266384778012685, 0.02631578947368421, 0.026031237484981977, 0.025720966484801246, 0.025169045830202855, 0.024844720496894408, 0.024442082890541977, 0.024196335983408226, 0.0239298955173576, 0.023637557452396585, 0.02328548644338118, 0.023002797637550514, 0.02271350696547547, 0.022478556640047324, 0.022222222222222223, 0.021922428330522766, 0.021703296703296703, 0.021413276231263382, 0.021137787056367433, 0.020950434338272865, 0.020687936191425723, 0.0205078125, 0.02027188170760792, 0.02008407286314806, 0.019881170018281536, 0.019656019656019656, 0.019479098270956445, 0.019317450096587252, 0.01914580265095729, 0.018906699547883273, 0.01870098532073195, 0.01854043392504931, 0.01833622852731133, 0.01818181818181818, 0.01801634472511144, 0.01780846810830456, 0.017672259907176007];
          new Chartkick.LineChart("chart-1", data);
        }
      }
      run(2);
    }) ;
  div.form(id="user-info")
    h3 Collect User Info
    div.form-group
      label From Collection:
      input.form-control(id="collectionName", type="text", name="collectionName", value="")
      button.btn.btn-primary(id="user_info_button") Submit
    script.
      $(document).ready(function () {
        $("#user_info_button").click(function () {
          var userData = {};
          userData["collection"] = $("#collectionName")[0].value;
          $.ajax({
            url: '/user_info.json',
            type: 'post',
            data: userData,
            success: function (data) {
              var data = JSON.parse(data);
              var html = $.parseHTML("<p> Records in User Database:  " + data.count + "</p>");
              $('#user-info').prepend(html);
            }, error: function (err) {
              var html = $.parseHTML("<p> Error! " + err + "</p>");
              $('#user-info').prepend(html);
            }
          });
        });
      });
  div.well(id="data-stream", style="display: hidden;")
    table
      tbody
        tr
          th Collection
          th Query
          th Count
        tr
          td(id="dataStreamCollection")
          td(id="dataStremQuery")
          td(id="dataStreamCount")
      tfooter
        h4(id="last-tweet")
  div.form(id="current_data_bot")
    h3
      lead Add Current Data
    script.
      if ('#{query}' === undefined) {
       '#{query = "GWPH"}'
      }
      if ('#{collection}' === undefined) {
        '#{collection = "GWPH_test"}'
      }
    div.form-group
      label Collection
      input.form-control(id="collection", type="text", name="collection", value="#{collection}")
    div.form-group
      label Query
      input.form-control(id="query", type="text", name="query", value="#{query}")
    button.btn.btn-primary(id="current_data_bot_button") Submit
    script.
      $(document).ready(function () {
        $("#current_data_bot_button").click(function () {

          var form = $("#current_data_bot input");
          var d = {};
          d["collectionName"] = $("#collection")[0].value;
          d["query"] = $("#query")[0].value;
          var queues = {};
          var unlocked = true;

          function streamQueue() {
            if ((queues["collection"].length > 0) && unlocked) {
              unlocked = false;
              $("dataStreamCollection").fadeOut("fast", function () {
                $("dataStreamCollection").val(queue.pop());
                $("dataStreamCollection").fadeIn("fast", function () {
                  unlocked = true;
                  streamQueue();
                });
              });
            }
          }

          //- function launchWebSocket(d) {
          //-   var ws = new WebSocket('ws://localhost:3000/');
          //-   var dataString = JSON.stringify(d);
          //-   ws.on('open', function() {
          //-       ws.send(d);
          //-   });
          //-   ws.on('message', function(data, flags) {
          //-     var dataObj = JSON.parse(data);
          //-     if (dataObj.hasOwnProperty("collection")) {
          //-       if (queues["collection"] === null) queues["collection"] = [];
          //-         queues["collection"].push(dataObj["collection"]);
          //-         streamQueue();
          //-       }
          //-     }
          //-   });
          //- }

          function launchAjax(d) {
            var $el = $("#current_data_bot");
            var oldHtml = $("#current_data_bot").html();
            $el.waiting({
              className: 'waiting-circles',
              elements: 8,
              radius: 20,
              auto: true
            });
            $el.waiting('play');
            var error_count = 0;
            function timerFunction () {
              var timerId;
              $.ajax({
                url: '/current_timer.json',
                type: 'get',
                success: function (data) {
                  error_count = 0;
                  console.log(data);
                  var f = JSON.parse(data);
                  console.log(f);
                  if (f === null) {
                    timerId = setTimeout(timerFunction, 500);
                    return;
                  }
                  var bool = f["running"];
                  console.log("testing bool");
                  console.log(bool);
                  if (bool) {
                    timerId = setTimeout(timerFunction, 500);
                  } else {
                    $el.waiting('disable');
                    $el.waiting('destroy');
                    $el.html(oldHtml);
                    node = $.parseHTML('<h4> Collection: ' + d["collectionName"] + '</h4><h5> Query: ' + d["query"] +' </h5>');
                    $el.prepend(node);
                    clearTimeout(timerId);
                    // done!
                  }
                },
                error: function (err) {
                  error_count += 1;
                  console.log(err);
                  if (error_count > 5) {
                    clearTimeout(timerId);
                    $el.waiting('disable');
                    $el.waiting('destroy');
                    $el.html(oldHtml);
                    node = $.parseHTML('<p> An error has occured. Refresh and try again.</p>');
                    console.log(node);
                    $el.prepend(node);
                  } else {
                    timerId = setTimeout(timerFunction, 500);
                  }
                }
              });
            }
            $.ajax({
              url: '/current_timer.json',
              type: 'post',
              data: d,
              success: function (data) {
                console.log(data);
                var g = JSON.parse(data);
                console.log(g);
                var c = g["running"];
                console.log(g["running"]);
                if (c) {
                  timerFunction();
                } else {
                  console.log("not running?");
                }
              },
              error: function (err) {
                console.log(data);
                timerFunction();
              }
            });
          }
          launchAjax(d);
        });
      });
  table.table.table-hover(style = "margin-top: 20px;")
    tbody
      tr.row
        th
          = "Name"
        th
          = "Number of Documents"
        th
          = "Indexes"
      - for (var i in collections)
        tr.row
          td
            a.collection-link
              = collections[i]['name']
          td
            = collections[i]['count']
          td
            - test = true
            - for (var key in collections[i]['indexes'])
              - if (test)
                = collections[i]['indexes'][key][0][0]
                - test = false
              - else
                = ", " + collections[i]['indexes'][key][0][0]